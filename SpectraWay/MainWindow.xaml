<controls:MetroWindow x:Class="SpectraWay.MainWindow"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                      xmlns:controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
                      xmlns:Dialog="clr-namespace:MahApps.Metro.Controls.Dialogs;assembly=MahApps.Metro"
                      
                      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                      
                      xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
                      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                      xmlns:converters="http://metro.mahapps.com/winfx/xaml/shared"
                      xmlns:converter="clr-namespace:SpectraWay.Converter"
                      TitleCaps="False"
                      Width="1000"
                      Height="738"
                      Dialog:DialogParticipation.Register="{Binding}"
                    
                      d:DesignHeight="600"
                      d:DesignWidth="800"
                   
                      GlowBrush="{DynamicResource AccentColorBrush}"
                      Icon="logo.png"
                      NonActiveGlowBrush="#CDFF0000"
                      ShowIconOnTitleBar="True"
                      ShowTitleBar="{Binding ShowMyTitleBar, Mode=OneWay}"
                      WindowStartupLocation="CenterScreen"
                      mc:Ignorable="d">

    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/FlatSlider.xaml" />
                <ResourceDictionary Source="/Template/Experiment.Template.xaml" />
                <ResourceDictionary Source="/Template/Dialog/Experiment.Dialog.Template.xaml" />
                <ResourceDictionary Source="/Localization/StringResourceProvider.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <Rectangle x:Key="AppThemeMenuIcon"
                     Width="16"
                     Height="16"
                     x:Shared="False"
                     Fill="{Binding ColorBrush, Mode=OneWay}"
                     Stroke="{Binding BorderColorBrush, Mode=OneWay}"
                     StrokeThickness="1" />
            <Rectangle x:Key="AccentMenuIcon"
                     Width="16"
                     Height="16"
                     x:Shared="False"
                     Fill="{Binding ColorBrush, Mode=OneWay}" />

            <Style x:Key="AppThemeMenuItemStyle"
                   BasedOn="{StaticResource MetroMenuItem}"
                   TargetType="{x:Type MenuItem}">
                <Setter Property="Command" Value="{Binding ChangeAccentCommand}" />
                <Setter Property="Header" Value="{Binding Name, Mode=OneWay}" />
                <Setter Property="Icon" Value="{StaticResource AppThemeMenuIcon}" />
            </Style>

            <Style x:Key="AccentColorMenuItemStyle"
                   BasedOn="{StaticResource MetroMenuItem}"
                   TargetType="{x:Type MenuItem}">
                <Setter Property="Command" Value="{Binding ChangeAccentCommand}" />
                <Setter Property="Header" Value="{Binding Name, Mode=OneWay}" />
                <Setter Property="Icon" Value="{StaticResource AccentMenuIcon}" />
            </Style>


            <DataTemplate x:Key="HamburgerMenuItem" DataType="{x:Type controls:HamburgerMenuItem}">
                <Grid Height="48">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="48" />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <ContentControl Grid.Column="0"
                                Content="{Binding Tag}"
                                Focusable="False"
                                IsTabStop="False" />
                    <TextBlock Grid.Column="1"
                           VerticalAlignment="Center"
                           FontSize="16"
                           Text="{Binding Label}" />
                </Grid>
            </DataTemplate>

            <DataTemplate x:Key="HamburgerMenuImageItem" DataType="{x:Type controls:HamburgerMenuGlyphItem}">
                <Grid Height="48">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="48" />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <Image Margin="12"
                       HorizontalAlignment="Center"
                       VerticalAlignment="Center"
                       Source="{Binding Glyph}"
                       Stretch="UniformToFill" />
                    <TextBlock Grid.Column="1"
                           VerticalAlignment="Center"
                           FontSize="16"
                           Text="{Binding Label}" />
                </Grid>
            </DataTemplate>

        </ResourceDictionary>


    </Window.Resources>
    <Window.Title>
        <Binding Path="Instance[SpectraWay].Value" Source="{StaticResource StringResourceProvider}"></Binding>
    </Window.Title>
    <controls:MetroWindow.RightWindowCommands>
        <controls:WindowCommands ShowLastSeparator="False">

            <Button x:Name="ThemeButton" Margin="1" DataContext="{Binding Mode=OneWay, RelativeSource={RelativeSource Self}}"
                        Content="{Binding Instance[UiSettings].Value, Source={StaticResource StringResourceProvider}}"
                    Click="ThemaButtonOnClick"
                         />


        </controls:WindowCommands>
    </controls:MetroWindow.RightWindowCommands>


    <controls:MetroWindow.Flyouts>
        <controls:FlyoutsControl x:Name="flyoutsControl">
            <controls:Flyout x:Name="themaflyout"
                             IsModal="True"
                             Position="Top"
                            ClosingFinished="Themaflyout_OnClosingFinished"
                             HorizontalContentAlignment="Stretch"
                             controls:ControlsHelper.ContentCharacterCasing="Upper"
                             AreAnimationsEnabled="True"
                             IsOpenChanged="Themaflyout_OnIsOpenChanged"
                             Loaded="Themaflyout_OnIsOpenChanged"
                          
                             >
                <Grid Margin="10">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <StackPanel  Grid.Row="0">
                        <TextBlock>Choose color</TextBlock>
                    </StackPanel>

                    <StackPanel  Grid.Row="1">
                        <ItemsControl ItemsSource="{Binding AccentColors, Mode=OneWay}" >
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <Button Command="{Binding ChangeAccentCommand}"
                                            Tag="{Binding Name}"
                    FocusManager.FocusedElement="{Binding IsFocused, Mode=OneWay}"
                    Style="{DynamicResource NoborderSquareButtonStyle}">
                                        <Button.Content>

                                            <Rectangle 
                                            Width="36"
                                            Height="36"
                                            Margin="1"
                                            Fill="{Binding ColorBrush, Mode=OneWay}" />
                                        </Button.Content>
                                    </Button>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <WrapPanel  Orientation="Horizontal"/>
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                        </ItemsControl>
                    </StackPanel>

                    <UniformGrid Grid.Row="2"
                                 Margin="10"
                                 Columns="2">

                    </UniformGrid>
                </Grid>
            </controls:Flyout>


        </controls:FlyoutsControl>
    </controls:MetroWindow.Flyouts>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="30" />
        </Grid.RowDefinitions>

        <Grid Canvas.ZIndex="100"  Grid.RowSpan="2" Grid.ColumnSpan="2" Opacity="0.8" Visibility="{Binding IsWait, Converter={StaticResource VisibilityConverter}}" Background="White">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <StackPanel Grid.Row="1" Grid.Column="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="White">
                <ScrollViewer MaxWidth="{Binding ElementName=ExperimentViewContainer, Path=ActualWidth}" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" VerticalContentAlignment="Stretch" HorizontalContentAlignment="Stretch" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
                    <TextBox BorderThickness="0" IsReadOnly="True" Text="{Binding WaitMessage}" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" VerticalContentAlignment="Stretch" HorizontalContentAlignment="Stretch"></TextBox>
                </ScrollViewer>
                <Label></Label>
                <controls:ProgressRing 
                    
                                       Width="70"
                                       Height="70"
                                       ToolTip="{Binding WaitMessage}" />
            </StackPanel>
        </Grid>

        <Grid Grid.Row="1" ClipToBounds="False">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"></RowDefinition>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="48" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Canvas x:Name="MenuCanvas" Grid.Column="0" ClipToBounds="False" Canvas.ZIndex="100" VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                <controls:HamburgerMenu x:Name="HamburgerMenuControl"
                                Canvas.ZIndex="100"
                                ItemTemplate="{StaticResource HamburgerMenuItem}"
                                VerticalAlignment="Stretch"
                                OptionsItemTemplate="{StaticResource HamburgerMenuItem}"
                                Height="{Binding ElementName=MenuCanvas, Path=ActualHeight}"
                                HamburgerWidth="48"
                                IsPaneOpen="False"
                                
                                VerticalScrollBarOnLeftSide="False">
                    <!--Header-->
                    <controls:HamburgerMenu.HamburgerMenuHeaderTemplate>
                        <DataTemplate>
                            <TextBlock HorizontalAlignment="Center"
                               VerticalAlignment="Center"
                               FontSize="16"
                               Foreground="White"
                               Text="{Binding Instance[PleaseChooseAction].Value, Source={StaticResource StringResourceProvider}}" />
                        </DataTemplate>
                    </controls:HamburgerMenu.HamburgerMenuHeaderTemplate>
                    <!--Items-->
                    <controls:HamburgerMenu.ItemsSource>
                        <controls:HamburgerMenuItemCollection>

                            <controls:HamburgerMenuGlyphItem  Label="{Binding Instance[ShowExperimentList].Value, Source={StaticResource StringResourceProvider}}" Command="{Binding ShowExperimentListCommand}">
                                <controls:HamburgerMenuGlyphItem.Tag>
                                    <iconPacks:PackIconFontAwesome Width="22"
                                                        Height="22"
                                                        HorizontalAlignment="Center"
                                                        VerticalAlignment="Center"
                                                        Kind="ListAlt" />
                                </controls:HamburgerMenuGlyphItem.Tag>
                            </controls:HamburgerMenuGlyphItem>

                            <controls:HamburgerMenuGlyphItem  Label="{Binding Instance[NewExperiment].Value, Source={StaticResource StringResourceProvider}}" Command="{Binding CreateExperimentCommand}">
                                <controls:HamburgerMenuGlyphItem.Tag>
                                    <iconPacks:PackIconMaterial Width="22"
                                                        Height="22"
                                                                
                                                        HorizontalAlignment="Center"
                                                        VerticalAlignment="Center"
                                                        Kind="PlusCircleOutline" />
                                </controls:HamburgerMenuGlyphItem.Tag>
                            </controls:HamburgerMenuGlyphItem>

                            <controls:HamburgerMenuGlyphItem  Label="{Binding Instance[Export].Value, Source={StaticResource StringResourceProvider}}">
                                <controls:HamburgerMenuGlyphItem.Tag>
                                    <iconPacks:PackIconMaterial Width="22"
                                                        Height="22"
                                                        HorizontalAlignment="Center"
                                                        VerticalAlignment="Center"
                                                        Kind="FileExport" />
                                </controls:HamburgerMenuGlyphItem.Tag>
                            </controls:HamburgerMenuGlyphItem>

                            <controls:HamburgerMenuGlyphItem  Label="{Binding Instance[Import].Value, Source={StaticResource StringResourceProvider}}">
                                <controls:HamburgerMenuGlyphItem.Tag>
                                    <iconPacks:PackIconMaterial Width="22"
                                                        Height="22"
                                                        HorizontalAlignment="Center"
                                                        VerticalAlignment="Center"
                                                        Kind="FileImport" />
                                </controls:HamburgerMenuGlyphItem.Tag>
                            </controls:HamburgerMenuGlyphItem>

                            <controls:HamburgerMenuGlyphItem  Label="{Binding Instance[Save].Value, Source={StaticResource StringResourceProvider}}" Command="{Binding SaveAllCommand}" IsEnabled="{Binding IsSaveAllEnabled}">
                                <controls:HamburgerMenuGlyphItem.Tag>
                                    <iconPacks:PackIconMaterial Width="22"
                                                        Height="22"
                                                        HorizontalAlignment="Center"
                                                        VerticalAlignment="Center"
                                                        Kind="ContentSaveAll" />
                                </controls:HamburgerMenuGlyphItem.Tag>
                            </controls:HamburgerMenuGlyphItem>

                        </controls:HamburgerMenuItemCollection>
                    </controls:HamburgerMenu.ItemsSource>

                    <!--Options-->
                    <controls:HamburgerMenu.OptionsItemsSource>
                        <controls:HamburgerMenuItemCollection>
                            <controls:HamburgerMenuGlyphItem  Label="{Binding Instance[Settings].Value, Source={StaticResource StringResourceProvider}}" Command="{Binding SettingsCommand}">
                                <controls:HamburgerMenuGlyphItem.Tag>
                                    <iconPacks:PackIconMaterial Width="22"
                                                        Height="22"
                                                        HorizontalAlignment="Center"
                                                        VerticalAlignment="Center"
                                                        Kind="Settings" />
                                </controls:HamburgerMenuGlyphItem.Tag>
                            </controls:HamburgerMenuGlyphItem>
                            <controls:HamburgerMenuGlyphItem  Label="{Binding Instance[About].Value, Source={StaticResource StringResourceProvider}}">
                                <controls:HamburgerMenuGlyphItem.Tag>
                                    <iconPacks:PackIconMaterial Width="22"
                                                        Height="22"
                                                        HorizontalAlignment="Center"
                                                        VerticalAlignment="Center"
                                                        Kind="HelpCircleOutline" />
                                </controls:HamburgerMenuGlyphItem.Tag>
                            </controls:HamburgerMenuGlyphItem>
                        </controls:HamburgerMenuItemCollection>
                    </controls:HamburgerMenu.OptionsItemsSource>
                    <!--Content-->
                    <controls:HamburgerMenu.ContentTemplate>
                        <DataTemplate>
                            <StackPanel></StackPanel>
                        </DataTemplate>
                    </controls:HamburgerMenu.ContentTemplate>

                </controls:HamburgerMenu>
            </Canvas>

            <Grid Grid.Column="1">
                <controls:TransitioningContentControl x:Name="TransitioningContentControl" Transition="Left" >
                    <Grid >
                        <Grid Canvas.ZIndex="10"  Visibility="{Binding Path=ExperimentListViewModel.ExperimentTileCollection.Count, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource VisibilityConverter}, ConverterParameter=Inverse}" >
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"></RowDefinition>
                                <RowDefinition Height="Auto"></RowDefinition>
                                <RowDefinition Height="*"></RowDefinition>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"></ColumnDefinition>
                                <ColumnDefinition Width="Auto"></ColumnDefinition>
                                <ColumnDefinition Width="*"></ColumnDefinition>
                            </Grid.ColumnDefinitions>
                            <StackPanel Grid.Column="1" Grid.Row="1">
                                <TextBlock Margin="5" Text="{Binding Instance[ExperimentListIsEmpty].Value, Source={StaticResource StringResourceProvider}}" />
                                <Button Margin="5" HorizontalAlignment="Center" Command="{Binding CreateExperimentCommand}" Content="{Binding Instance[AddNewExperiment].Value, Source={StaticResource StringResourceProvider}}"/>
                            </StackPanel>
                        </Grid>
                        <Grid Visibility="{Binding Path=ExperimentListViewModel.ExperimentTileCollection.Count, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource VisibilityConverter}}">
                            <ContentControl Content="{Binding ExperimentListViewModel}" ContentTemplate="{StaticResource ExperimentListView}" Visibility="{Binding ExperimentListViewModel.SelectedExperimentTile, Converter={StaticResource VisibilityConverter}, ConverterParameter=Inverse}"  Margin="5"></ContentControl>

                            <ContentControl Content="{Binding ExperimentListViewModel.SelectedExperimentTile}" ContentTemplate="{StaticResource ExperimentView}" Visibility="{Binding ExperimentListViewModel.SelectedExperimentTile, Converter={StaticResource VisibilityConverter}}" Margin="5"></ContentControl>
                        </Grid>
                        
                    </Grid>
                </controls:TransitioningContentControl>

            </Grid>


        </Grid>


        <StatusBar Grid.Row="2">
            <StatusBarItem>
                <Button x:Name="ConsoleButton" Margin="0" DataContext="{Binding Mode=OneWay, RelativeSource={RelativeSource Self}}"
                        Foreground="{DynamicResource IdealForegroundColorBrush}"
                        Background="Transparent"
                        Style="{DynamicResource MetroFlatButton}"
                        BorderThickness="0"
                    Click="ConsoleButton_OnClick"
                         >
                    <iconPacks:PackIconMaterial Width="16"
                                                        Height="16"
                                                        HorizontalAlignment="Center"
                                                        VerticalAlignment="Center"
                                                        Kind="Console" />
                </Button>
            </StatusBarItem>
            <StatusBarItem Content="{Binding Instance[SpectraWay].Value, Source={StaticResource StringResourceProvider}}"/>
            <Separator Style="{StaticResource MetroStatusBarSeparator}" />
            <StatusBarItem Content="{Binding Instance[LastOperation].Value, Source={StaticResource StringResourceProvider}}" ContentStringFormat="{}{0}: "/>
            <StatusBarItem Content="{Binding CurrentOperation}" ToolTip="{Binding CurrentOperation}" Height="25" VerticalAlignment="Stretch" VerticalContentAlignment="Center" Margin="0,4,0,3"/>
        </StatusBar>
    </Grid>
</controls:MetroWindow>
